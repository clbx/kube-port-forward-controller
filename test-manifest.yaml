apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-router-port-forward
  namespace: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-router-port-forward
  template:
    metadata:
      labels:
        app: kube-router-port-forward
    spec:
      serviceAccountName: kube-router-port-forward
      containers:
      - name: kube-router-port-forward
        image: clbx/kube-router-port-forward
        imagePullPolicy: Always
        env:
        - name: UNIFI_USERNAME
          valueFrom:
            secretKeyRef:
              name: kube-router
              key: user
        - name: UNIFI_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kube-router
              key: pass
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-router-port-forward
  namespace: development
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-router-port-forward
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-router-port-forward
subjects:
- kind: ServiceAccount
  name: kube-router-port-forward
  namespace: development
roleRef:
  kind: ClusterRole
  name: kube-router-port-forward
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: kube-router-test
  namespace: development
spec:
  refreshInterval: "15s"
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: kube-router
  data:
  - secretKey: user
    remoteRef:
      key: kubernetes/unpoller
      property: user
  - secretKey: pass
    remoteRef:
      key: kubernetes/unpoller
      property: pass
